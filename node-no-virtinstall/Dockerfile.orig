# ------------------------------------------------------------------------------
# Common part
# ------------------------------------------------------------------------------

# === Stage 1 ===

FROM centos:7 as builder

COPY test.sh /
# Setup environment variables
ENV VERSION="5.10.4" \
    PKG_VERSION=1 \
    BUILD_DIR="/tmp/build" \
    BUILD_DIR_SPKG="/tmp/spkg" \
    MOCK_DIR_GEMS="/tmp/mobuild" \
    CONTACT="Unsupported Community Build" \
    GIT_VERSION="not known" \
    DISTRO=centos7 \
    GEMFILE_LOCK='CentOS7' \
    URL="opennebula-5.10.4.tar.gz" \
    PKG_VERSION="5.10.4" \
    SPEC="centos7.spec" \
    PACKAGES_DIR="/packages-5.10.4" \
    SOURCES_DIR="/packages-5.10.4/sources" \
    SOURCE="$(basename ${URL})" \
    PACKAGE="opennebula-5.10.4" \
    NAME="$(echo ${PACKAGE} | cut -d'-' -f1)" \
    CONTACT="${CONTACT:-Unsupported Community Build}" \
    BASE_NAME="${NAME}-${VERSION}-${PKG_VERSION}" \
    GEMS_RELEASE="${VERSION}_${PKG_VERSION}.${DIST_TAG}" \
    GIT_VERSION="${GIT_VERSION:-not known}"
    #DATE=$(date +'%a %b %d %Y')
RUN mkdir -p /tmp/{spkg,build,mobuild}
#RUN source /test.sh
# Install build dependencies
RUN yum install -y epel-release
RUN yum update -y \
 && yum install -y npm rpm-build gcc-c++ libcurl-devel libxml2-devel xmlrpc-c-devel openssl-devel \
mysql-devel sqlite-devel openssh pkgconfig ruby scons sqlite-devel xmlrpc-c java-1.7.0-openjdk-devel \
ruby-devel createrepo wget make npm git augeas augeas-libs which m4 rpmbuild

# Download sources
RUN wget -q -O - "https://github.com/OpenNebula/one/archive/release-$VERSION.tar.gz" | tar -xvzf - \
 && mv /one-release-$VERSION /opennebula-$VERSION \
 && wget -q -O - "https://github.com/OpenNebula/packages/archive/release-$VERSION.tar.gz" | tar -xvzf - \
 && mv /packages-release-$VERSION /packages-$VERSION && gem install ronn

WORKDIR /opennebula-$VERSION

# Apply patches
RUN wget -q -O - "https://github.com/OpenNebula/one/pull/4585.diff" | patch -p1

# Build docs
RUN cd share/man \
 && ./build.sh

# Build Sunstone
RUN cd src/sunstone/public \
 && ./build.sh -d \
 && export PATH=$PATH:$PWD/node_modules/.bin \
 && ./build.sh \
 && rm -rf node_modules/

# Prepare sources
#RUN source /test.sh
RUN tar -czf /opennebula-${VERSION}.tar.gz /opennebula-${VERSION} \
&& cp -r /packages-$VERSION/templates/$DISTRO/ /centos7 \
&& cp "${PACKAGES_DIR}/templates/${DISTRO}"/* "${BUILD_DIR_SPKG}" \
&& cd "${BUILD_DIR_SPKG}" \
&& wget -q http://downloads.opennebula.org/extra/xmlrpc-c.tar.gz \
&& cp "${SOURCES_DIR}/build_opennebula.sh" . \
&& cp "${SOURCES_DIR}/xml_parse_huge.patch" . \
&& cp -r "/$PACKAGE" . \
&& mkdir -p /data \
&& ln -s ${PACKAGES_DIR} /data/packages \
&& ln -s ${BUILD_DIR_SPKG} /data/source \
&& ln -s ${MOCK_DIR_GEMS} /data/build \
#&& cd / \
&& tar cvzf /opennebula-$VERSION.tar.gz /opennebula-$VERSION \
&& yes|cp /opennebula-$VERSION.tar.gz "/data/source/"

RUN echo '***** Building Ruby gems' >&2 \
      &&  '/data/packages/rubygems/build.sh' \
            "/data/source/$(basename ${URL})" \
            "/data/build" \
            "${GEMFILE_LOCK}" \
            "${VERSION}" \
            "${CONTACT}"

RUN for F in /data/build/opennebula-rubygem-*.rpm; do \
        _NAME=$(rpm -qp "${F}" --queryformat '%{NAME}\n') \
        _VERS=$(rpm -qp "${F}" --queryformat '%{VERSION}\n') \
        _REL=$(rpm -qp "${F}" --queryformat '%{RELEASE}\n') \

        RUBYGEMS_REQ="${RUBYGEMS_REQ}Requires: ${_NAME} = ${_VERS}-${_REL}"$'\n'; \
    done \
#< <(rpm -qp /data/build/opennebula-rubygem-*.rpm --queryformat '%{NAME} %{VERSION} %{RELEASE}\n') \
&&    cp /data/build/opennebula-rubygem-*.rpm "${BUILD_DIR}"

RUN cd "${BUILD_DIR_SPKG}" \
&& _BUILD_COMPONENTS_UC=${BUILD_COMPONENTS^^} \
&& m4 -D_VERSION_="${VERSION}" \
    -D_PKG_VERSION_="${PKG_VERSION}" \
    -D_CONTACT_="${CONTACT}" \
    -D_DATE_="$(date +'%a %b %d %Y')" \
    -D_RUBYGEMS_REQ_="${RUBYGEMS_REQ}" \
    ${_BUILD_COMPONENTS_UC:+ -D_WITH_${_BUILD_COMPONENTS_UC//[[:space:]]/_ -D_WITH_}_} \
    "${DISTRO}.spec.m4" >"${SPEC}" \
&& yum install -y $(cat centos7.spec | grep BuildRequires | awk '{print $2}') \
&& sed -i 's/mv xmlrpc-c ../#mv xmlrpc-c ../g' build_opennebula.sh \
&& mkdir -p ~/rpmbuild/ \
&& rm -rf /root/rpmbuild/SOURCES \
&& rm -rf /root/rpmbuild/RPMS \
&& ln -s /data/source /root/rpmbuild/SOURCES \
&& ln -s /data/build /root/rpmbuild/RPMS
RUN rpmbuild -ba "${BUILD_DIR_SPKG}/${SPEC}" && yum install -y $(cat $BUILD_DIR_SPKG/$SPEC | grep BuildRequires | awk '{print $2}')

#RUN yum install -y $(cat centos7.spec | grep BuildRequires | awk '{print $2}')
#RUN tar -czf /opennebula_$VERSION.orig.tar.gz /opennebula-$VERSION \
# && cp -r /packages-$VERSION/templates/$DISTRO /centos7 \
# && wget -q http://downloads.opennebula.org/extra/xmlrpc-c.tar.gz \
# && tar -czf build_opennebula.tar.gz -C /packages-$VERSION/sources build_opennebula.sh xml_parse_huge.patch

# Build Ruby gems
#RUN "/packages-$VERSION/rubygems/build.sh" \
#    "/opennebula_$VERSION.orig.tar.gz" \
#    "/" \
#    "$(echo ${DISTRO} | sed 's/\b./\u\0/g')" \
#    "${VERSION}-${PKG_VERSION}" \
#    "${CONTACT}"
#RUN "/packages-$VERSION/rubygems/build.sh" \
#            "/opennebula-$VERSION.tar.gz" \
#            "/" \
#            "$(echo ${DISTRO} | sed 's/\b./\u\0/g')" \
#            "${VERSION}-${PKG_VERSION}" \
#            "${CONTACT}"

# Generate requirements for all Ruby gem packages and process control template
#
#    RUN for F in /opennebula-rubygem-*.rpm; do
#        _NAME=$(echo "${F}" | cut -d' ' -f1)
#        _VERS=$(echo "${F}" | cut -d' ' -f2)
#        _REL=$(echo "${F}" | cut -d' ' -f3)
#
#        RUBYGEMS_REQ="${RUBYGEMS_REQ}Requires: ${_NAME} = ${_VERS}-${_REL}"$'\n'
#    done < <(rpm -qp "${MOCK_DIR_GEMS}"/opennebula-rubygem-*.rpm --queryformat '%{NAME} %{VERSION} %{RELEASE}\n')

#RUN for F in /opennebula-rubygem-*.rpm; do \
#        _NAME=$(dpkg-deb -f "${F}" Package); \
#        _VERS=$(dpkg-deb -f "${F}" Version); \
#        RUBYGEMS_REQ="${RUBYGEMS_REQ}${_NAME} (= ${_VERS}), "; \
#    done \
# && m4 -D_VERSION_="${VERSION}" \
#    -D_PKG_VERSION_="${PKG_VERSION}" \
#    -D_CONTACT_="${CONTACT}" \
#    -D_DATE_="${DATE}" \
#    -D_RUBYGEMS_REQ_="${RUBYGEMS_REQ}" \
#    -D_WITH_RUBYGEMS_ \
#    redhat/control.m4 > redhat/control
#RUN for F in /opennebula-rubygem-*.rpm; do yum install -y $F ; done
# Generate changelog
#RUN printf '%s\n\n' \
#  "opennebula (${VERSION}-${PKG_VERSION}) unstable; urgency=low" \
#  "  * Build for ${VERSION}-${PKG_VERSION} (Git revision ${GIT_VERSION})" \
#  " -- ${CONTACT}  $(date -R)" \
#  > debian/changelog

# Generate gitversion
#RUN echo "${GIT_VERSION}" > debian/gitversion
  
# Build source package
#RUN dpkg-source --include-binaries -b .

# Install dependencies
#RUN apt-get install -y $(dpkg-checkbuilddeps 2>&1 | sed 's/.*Unmet build dependencies: //')

# Build binary package
#RUN dpkg-buildpackage -us -uc

# === Stage 2 ===

#FROM centos:7

# ------------------------------------------------------------------------------
# Specific part
# ------------------------------------------------------------------------------

# Install opennebula-node
#COPY --from=builder /opennebula-node_*.rpm /packages/
#RUN apt-get -y update \
# && ln -s /bin/true /usr/local/bin/systemctl \
# && rpm -i packages/opennebula-node_*.rpm || true \
# && yum -y install \
# && yum -l opennebula-node \
# && rm -f /usr/local/bin/systemctl \
# && rm -f /etc/libvirt/qemu/networks/autostart/default.xml \
# && yum clean all
